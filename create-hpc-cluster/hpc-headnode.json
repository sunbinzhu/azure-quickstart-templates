{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiVersion": {
      "type": "string",
      "metadata": {
        "description": "The API version"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The VM name"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The VM role size"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The storage account name to store the VHD of the VM"
      }
    },
    "imageReference": {
      "type": "object",
      "metadata": {
        "description": "The image reference"
      }
    },
    "nicName": {
      "type": "string",
      "metadata": {
        "description": "The network interface name"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The user name of the administrator"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the administrator"
      }
    },
    "dataDiskSizeInGB": {
      "type": "int",
      "metadata": {
        "description": "The data disk size in GB"
      }
    },
    "privateDomainName": {
      "type": "string",
      "metadata": {
        "description": "The fully qualified domain name (FQDN) for the private domain forest which will be created by this template, for example 'hpc.local'."
      }
    },
    "scriptBaseUri": {
      "type": "string",
      "metadata": {
        "description": "The base URI of the script"
      }
    },
    "headNodePostConfigScript": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional URL of a public available PowerShell script you want to run on the head node after it is configured. The script will be run as the Local System account. You can also specify arguments for the script, for example 'http://www.contoso.com/myhnpostscript.ps1 -Arg1 arg1 -Arg2 arg2'."
      }
    }
  },
  "variables": {
    "hnStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccountName'))]",
    "adminBase64Password": "[base64(parameters('adminPassword'))]",
    "iaasInfoArg": "[concat('-SubscriptionId ', subscription().subscriptionId, ' -VNet ', parameters('virtualNetworkName'), ' -Subnet ', parameters('subnetName'), ' -Location \"', resourceGroup().location, '\" -ResourceGroup ', resourceGroup().name)]",
    "headNodeCommandStr": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File PrepareHN.ps1 -DomainFQDN ', parameters('privateDomainName'), ' -AdminUserName ', parameters('adminUsername'), ' -AdminBase64Password \"', variables('adminBase64Password'), '\" -CNSize ', parameters('computeNodeVMSize'), ' -PostConfigScript \"', base64(trim(parameters('headNodePostConfigScript'))), '\" ', variables('iaasInfoArg'))]",
    "hnStorageConnStrPrefix": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=')]"
    "osDiskUri": "[concat('http://', parameters('storageAccountName'),'.blob.core.windows.net/vhds/', toLower(parameters('vmName')), '-os-', uniqueString(parameters('subnetId')), '.vhd')]",
    "dataDiskUri": "[concat('http://', parameters('storageAccountName'),'.blob.core.windows.net/vhds/', toLower(parameters('vmName')), '-data-', uniqueString(parameters('subnetId')), '.vhd')]"
  },
  "resources": [
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[parameters('imageReference')]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[variables('osDiskUri')]"
            },
            "caching": "ReadOnly",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk",
              "vhd": {
                "uri": "[variables('dataDiskUri')]"
              },
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": "[parameters('dataDiskSizeInGB')]",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'), '/joinDomain')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "Name": "[parameters('privateDomainName')]",
          "User": "[concat(parameters('privateDomainName'), '\\', parameters('adminUsername'))]",
          "NumberOfRetries": "50",
          "RetryIntervalInMilliseconds": "10000",
          "Restart": "true",
          "Options": "3"
        },
        "protectedSettings": {
          "Password": "adminPassword"
        }
      }
    },
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/configureHeadNode')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'),'/extensions/joinDomain')]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(parameters('scriptBaseUri'), '/PrepareHN.ps1')]",
            "[concat(parameters('scriptBaseUri'), '/HPCHNPrepare.ps1')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat(variables('headNodeCommandStr'), ' -AzureStorageConnStr \"', variables('hnStorageConnStrPrefix'), listKeys(variables('hnStorageAccountId'),parameters('apiVersion')).key1, '\" -PublicDnsName ', reference('setupClusterPublicIP').outputs.fqdn.value)]"
        }
      }
    }
  ]
}
