{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "The HPC Pack cluster name, also used as the host name of the head node. It must contain between 3 and 15 characters with lowercase letters and numbers, and must start with a letter."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual network to be created. It must contain between 2 and 63 characters, start with a letter, end with a letter or number, and may contain only letters, numbers, underscores, periods, or hyphens."
      }
    },
    "privateDomainName": {
      "type": "string",
      "defaultValue": "hpc.local",
      "metadata": {
        "description": "The fully qualified domain name (FQDN) for the private domain forest which will be created by this template, for example 'hpc.local'."
      }
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The name prefix of the new storage accounts to be created to store the VM disks: one storage account dedicated to the head node, and one storage account for every certain number of compute nodes specified by parameter 'nbrCNPerStorageAccount'. "
      }
    },
    "storageAccountStartIndex": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The start index of the new storage accounts to be created."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      }
    },
    "nbrCNPerStorageAccount": {
      "type": "int",
      "defaultValue": 20,
      "metadata": {
        "description": "The maximum number of compute nodes in one storage account."
      }
    },
    "headNodeVMSize": {
      "type": "string",
      "defaultValue": "Standard_A4",
      "metadata": {
        "description": "The VM size for the head node"
      }
    },
    "dcVMName": {
      "type": "string",
      "metadata": {
        "description": "The VM name for the DC"
      }
    },
    "dcVMSize": {
      "type": "string",
      "defaultValue": "Standard_A3",
      "metadata": {
        "description": "The VM size for the DC"
      }
    },
    "sqlVMName": {
      "type": "string",
      "metadata": {
        "description": "The VM name for the SQL server VM"
      }
    },
    "sqlVMSize": {
      "type": "string",
      "defaultValue": "Standard_A3",
      "metadata": {
        "description": "The VM size for the SQL server VM"
      }
    },
    "computeNodeImageOsPlatform": {
      "type": "string",
      "allowedValues": [
        "Windows",
        "Linux"
      ],
      "metadata": {
        "description": "The VM image OS platform for the compute nodes"
      }
    },
    "computeNodeImageReference": {
      "type": "object",
      "metadata": {
        "description": "The VM image reference for the compute nodes"
      }
    },
    "computeNodeNamePrefix": {
      "type": "string",
      "defaultValue": "IaaSCN-",
      "metadata": {
        "description": "The name prefix of the compute nodes. It must be no more than 12 characters, begin with a letter, and contain only letters, numbers and hyphens. For example, if 'IaaSCN-' is specified, the compute node names will be 'IaaSCN-000', 'IaaSCN-001', ..."
      }
    },
    "computeNodeNumber": {
      "type": "string",
      "defaultValue": "2",
      "metadata": {
        "description": "The number of the compute nodes"
      }
    },
    "computeNodeVMSize": {
      "type": "string",
      "defaultValue": "Standard_A3",
      "metadata": {
        "description": "The VM size for the compute nodes"
      }
    },
    "publicIPName": {
      "type": "string",
      "metadata": {
        "description": "The name of the public IP address"
      }
    },
    "publicIPRGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource group for the public IP address resource"
      }
    },
    "publicIPNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Indicates whether the public IP address is new or existing"
      }
    },
    "publicIPDNSNameLabel": {
      "type": "string",
      "metadata": {
        "description": "The DNS name label of the public IP address"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Administrator user name for the virtual machines and the Active Directory domain."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password for the virtual machines and the Active Directory domain"
      }
    },
    "headNodePostConfigScript": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional URL of a public available PowerShell script you want to run on the head node after it is configured. The script will be run as the Local System account. You can also specify arguments for the script, for example 'http://www.contoso.com/myhnpostscript.ps1 -Arg1 arg1 -Arg2 arg2'."
      }
    },
    "computeNodePostConfigScript": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional URL of a public available PowerShell script you want to run on the compute nodes after they are configured. The script will be run as the Local System account. You can also specify arguments for the script, for example 'http://www.contoso.com/mycnpostscript.ps1 -Arg1 arg1 -Arg2 arg2'."
      }
    },
    "artifactsBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "Base URL for Marketplace",
        "artifactsBaseUrl": ""
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "computeNodeNumber": "[int(parameters('computeNodeNumber'))]",
    "cnStorageAccountNumber": "[add(div(sub(variables('computeNodeNumber'), 1), parameters('nbrCNPerStorageAccount')), 1)]",
    "cnStorageAccountStartIndex": "[add(parameters('storageAccountStartIndex'), 1)]",
    "storageAccountIndexWidth": "[length(string(sub(add(variables('cnStorageAccountNumber'), variables('cnStorageAccountStartIndex')), 1)))]",
    "hnStorageAccountName": "[concat(parameters('storageAccountNamePrefix'), padLeft(string(parameters('storageAccountStartIndex')), variables('storageAccountIndexWidth'), '0'))]",
    "hnStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts',variables('hnStorageAccountName'))]",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet1Prefix": "10.0.0.0/22",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "publicIPAddressType": "Dynamic",
    "availabilitySetNamePrefix": "[concat(parameters('clusterName'), '-avset')]",
    "nbrVMPerAvailabilitySet": 50,
    "availabilitySetNumber": "[add(div(variables('computeNodeNumber'), variables('nbrVMPerAvailabilitySet')), 1)]",
    "uniqueSuffix":"[uniqueString(variables('subnetRef'))]",
    "nicNameDC": "[concat(parameters('dcVMName'), '-nic-', variables('uniqueSuffix'))]",
    "nicNameHN": "[concat(parameters('clusterName'), '-nic-', variables('uniqueSuffix'))]",
    "vmSizeSuffix": "[uniqueString(resourceGroup().id)]",
    "suffixA8Size": "[concat('Standard_A8', variables('vmSizeSuffix'))]",
    "suffixA9Size": "[concat('Standard_A9', variables('vmSizeSuffix'))]",
    "suffixHNSize": "[concat(parameters('headNodeVMSize'), variables('vmSizeSuffix'))]",
    "suffixCNSize": "[concat(parameters('computeNodeVMSize'), variables('vmSizeSuffix'))]",
    "cnRDMACapable": "[replace(replace(replace(variables('suffixCNSize'), variables('suffixA8Size'),'enabled'), variables('suffixA9Size'),'enabled'),variables('suffixCNSize'), 'disabled')]",
    "hnRDMACapable": "[replace(replace(replace(variables('suffixHNSize'), variables('suffixA8Size'),'enabled'), variables('suffixA9Size'),'enabled'),variables('suffixHNSize'), 'disabled')]",
    "hnRDMAJumpBox": {
      "disabled-disabled": "disabled",
      "disabled-enabled": "disabled",
      "enabled-disabled": "disabled",
      "enabled-enabled": "enabled"
    },
    "hnRDMAState": "[variables('hnRDMAJumpBox')[concat(variables('hnRDMACapable'), '-', variables('cnRDMACapable'))]]",
    "cnRDMAState": "[variables('cnRDMACapable')]",
    "cnOsPlatformRelated": {
      "Linux": {
        "template": "linuxnode.json"
      },
      "Windows": {
        "template": "[concat('windowsnode-rdma-', variables('cnRDMAState'), '.json')]"
      }
    },
    "curCNOSPlatformRelated": "[variables('cnOsPlatformRelated')[parameters('computeNodeImageOsPlatform')]]",
    "computeNodeTemplateUrl": "[concat(parameters('artifactsBaseUrl'), '/', variables('curCNOSPlatformRelated').template)]",
    "adminBase64Password": "[base64(parameters('adminPassword'))]",
    "iaasInfoArg": "[concat('-SubscriptionId ', subscription().subscriptionId, ' -VNet ', parameters('virtualNetworkName'), ' -Subnet ', variables('subnet1Name'), ' -Location \"', resourceGroup().location, '\" -ResourceGroup ', resourceGroup().name)]",
    "headNodeCommandStr": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File PrepareHN.ps1 -DomainFQDN ', parameters('privateDomainName'), ' -AdminUserName ', parameters('adminUsername'), ' -AdminBase64Password \"', variables('adminBase64Password'), '\" -CNSize ', parameters('computeNodeVMSize'), ' -DBServerInstanceName ', parameters('sqlVMName'), ' -PostConfigScript \"', base64(trim(parameters('headNodePostConfigScript'))), '\" ', variables('iaasInfoArg'))]",
    "hnStorageConnStrPrefix": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('hnStorageAccountName'), ';AccountKey=')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('hnStorageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicNameDC')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "IPConfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.0.4",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "[concat('createDC', parameters('dcVMName'))]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicNameDC'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('hnStorageAccountName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsBaseUrl'), '/hpc-domain-controller.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables('apiVersion')]"
          },
          "vmName": {
            "value": "[parameters('dcVMName')]"
          },
          "vmSize": {
            "value": "[parameters('dcVMSize')]"
          },
          "storageAccountName": {
            "value": "[variables('hnStorageAccountName')]"
          },
          "nicName": {
            "value": "[variables('nicNameDC')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "dataDiskSizeInGB": {
            "value": 200
          },
          "imageReference": {
            "value": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2012-R2-Datacenter",
              "version": "latest"
            }
          },
          "privateDomainName": {
            "value": "[parameters('privateDomainName')]"
          },
          "subnetId": {
            "value": "[variables('subnetRef')]"
          },
          "scriptBaseUri": {
            "value": "[parameters('artifactsBaseUrl')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "updateVNetDNS",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/createDC', parameters('dcVMName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsBaseUrl'),'/vnet-with-dns-server.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables('apiVersion')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('addressPrefix')]"
          },
          "subnetName": {
            "value": "[variables('subnet1Name')]"
          },
          "subnetRange": {
            "value": "[variables('subnet1Prefix')]"
          },
          "DNSServerAddress": {
            "value": [
              "10.0.0.4",
              "8.8.8.8"
            ]
          }
        }
      }
    },
    {
      "name": "setupClusterPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsBaseUrl'), '/publicip-', parameters('publicIPNewOrExisting'), '.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables('apiVersion')]"
          },
          "publicIPAddressName": {
            "value": "[parameters('publicIPName')]"
          },
          "publicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          },
          "domainNameLabel": {
            "value": "[parameters('publicIPDNSNameLabel')]"
          },
          "publicIPRGName": {
            "value": "[parameters('publicIpRGName')]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicNameHN')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicNameDC'))]",
        "Microsoft.Resources/deployments/setupClusterPublicIP"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "IPConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[reference('setupClusterPublicIP').outputs.resourceId.value]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "createAvailabilitySets",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsBaseUrl'), '/availabilitySets.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables('apiVersion')]"
          },
          "availabilitySetNamePrefix": {
            "value": "[variables('availabilitySetNamePrefix')]"
          },
          "availabilitySetNumber": {
            "value": "[variables('availabilitySetNumber')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "[concat('createHeadNode', parameters('clusterName'))]",
      "dependsOn": [
        "Microsoft.Resources/deployments/updateVNetDNS",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicNameHN'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('hnStorageAccountName'))]",
        "Microsoft.Resources/deployments/createAvailabilitySets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsBaseUrl'), '/vm-datadisk.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables('apiVersion')]"
          },
          "vmName": {
            "value": "[parameters('clusterName')]"
          },
          "vmSize": {
            "value": "[parameters('headNodeVMSize')]"
          },
          "storageAccountName": {
            "value": "[variables('hnStorageAccountName')]"
          },
          "subnetId": {
            "value": "[variables('subnetRef')]"
          },
          "nicName": {
            "value": "[variables('nicNameHN')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "dataDiskSizeInGB": {
            "value": 200
          },
          "imageReference": {
            "value": {
              "publisher": "MicrosoftWindowsServerHPCPack",
              "offer": "WindowsServerHPCPack",
              "sku": "2012R2",
              "version": "latest"
            }
          },
          "privateDomainName": {
            "value": "[parameters('privateDomainName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "[concat('createDBServer', parameters('sqlVMName'))]",
      "dependsOn": [
        "Microsoft.Resources/deployments/createAvailabilitySets",
        "Microsoft.Resources/deployments/updateVNetDNS",
        "[concat('Microsoft.Storage/storageAccounts/', variables('hnStorageAccountName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsBaseUrl'), '/hpc-sqlserver.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables('apiVersion')]"
          },
          "subnetId": {
            "value": "[variables('subnetRef')]"
          },
          "vmName": {
            "value": "[parameters('sqlVMName')]"
          },
          "vmSize": {
            "value": "[parameters('sqlVMSize')]"
          },
          "storageAccountName": {
            "value": "[variables('hnStorageAccountName')]"
          },
          "imageReference": {
            "value": {
              "publisher": "MicrosoftSQLServer",
              "offer": "SQL2014SP1-WS2012R2",
              "sku": "Standard",
              "version": "latest"
            }
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "dataDiskSizeInGB": {
            "value": 200
          },
          "headNodeNames": {
            "value": "[parameters('clusterName')]"
          },
          "privateDomainName": {
            "value": "[parameters('privateDomainName')]"
          },
          "scriptBaseUri": {
            "value": "[parameters('artifactsBaseUrl')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('clusterName'),'/configureHeadNode')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/createHeadNode', parameters('clusterName'))]",
        "[concat('Microsoft.Resources/deployments/createDBServer', parameters('sqlVMName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(parameters('artifactsBaseUrl'), '/PrepareHN.ps1')]",
            "[concat(parameters('artifactsBaseUrl'), '/HPCHNPrepare.ps1')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat(variables('headNodeCommandStr'), ' -AzureStorageConnStr \"', variables('hnStorageConnStrPrefix'), listKeys(variables('hnStorageAccountId'),variables('apiVersion')).key1, '\" -PublicDnsName ', reference('setupClusterPublicIP').outputs.fqdn.value)]"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(parameters('storageAccountNamePrefix'), padLeft(string(copyIndex(variables('cnStorageAccountStartIndex'))), variables('storageAccountIndexWidth'), '0'))]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Resources/deployments/updateVNetDNS"
      ],
      "copy": {
        "name": "hpcStorageAccounts",
        "count": "[variables('cnStorageAccountNumber')]"
      },
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "[concat('create', parameters('computeNodeNamePrefix'), padLeft(string(copyIndex()), 3, '0'))]",
      "dependsOn": [
        "Microsoft.Resources/deployments/createAvailabilitySets",
        "Microsoft.Resources/deployments/updateVNetDNS",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountNamePrefix'), padLeft(string(add(div(copyIndex(), parameters('nbrCNPerStorageAccount')), variables('cnStorageAccountStartIndex'))), variables('storageAccountIndexWidth'), '0'))]"
      ],
      "copy": {
        "name": "CN",
        "count": "[variables('computeNodeNumber')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('computeNodeTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables('apiVersion')]"
          },
          "subnetId": {
            "value": "[variables('subnetRef')]"
          },
          "vmName": {
            "value": "[concat(parameters('computeNodeNamePrefix'), padLeft(string(copyIndex()), 3, '0'))]"
          },
          "vmSize": {
            "value": "[parameters('computeNodeVMSize')]"
          },
          "storageAccountName": {
            "value": "[concat(parameters('storageAccountNamePrefix'), padLeft(string(add(div(copyIndex(), parameters('nbrCNPerStorageAccount')), variables('cnStorageAccountStartIndex'))), variables('storageAccountIndexWidth'), '0'))]"
          },
          "imageReference": {
            "value": "[parameters('computeNodeImageReference')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "availabilitySetName": {
            "value": "[concat(variables('availabilitySetNamePrefix'), padLeft(string(div(add(copyIndex(), 1), variables('nbrVMPerAvailabilitySet'))), 3, '0'))]"
          },
          "clusterName": {
            "value": "[parameters('clusterName')]"
          },
          "privateDomainName": {
            "value": "[parameters('privateDomainName')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "clusterDNSName": {
      "type": "string",
      "value": "[reference('setupClusterPublicIP').outputs.fqdn.value]"
    }
  }
}